name: release-main

permissions:
  contents: write
  packages: write

on:
  release:
    types: [published]

jobs:
  set-version:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Export tag
        id: vars
        run: {% raw %}echo tag=${GITHUB_REF#refs/*/} >> $GITHUB_OUTPUT{% endraw %}
        if: {% raw %}${{ github.event_name == 'release' }}{% endraw %}

      - name: Update project version
        run: |
          sed -i "s/^version = \".*\"/version = \"$RELEASE_VERSION\"/" pyproject.toml
        env:
          RELEASE_VERSION: {% raw %}${{ steps.vars.outputs.tag }}{% endraw %}
        if: {% raw %}${{ github.event_name == 'release' }}{% endraw %}

      - name: Upload updated pyproject.toml
        uses: actions/upload-artifact@v4
        with:
          name: pyproject-toml
          path: pyproject.toml
{% if cookiecutter.publish_to_pypi == "y" %}
  publish:
    runs-on: ubuntu-latest
    needs: [set-version]
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env

      - name: Download updated pyproject.toml
        uses: actions/download-artifact@v4
        with:
          name: pyproject-toml

      - name: Build package
        run: uv build

      - name: Publish package
        run: uv publish
        env:
          UV_PUBLISH_TOKEN: {% raw %}${{ secrets.PYPI_TOKEN }}{% endraw %}

      - name: Upload dists to release
        uses: svenstaro/upload-release-action@v2
        with:
            repo_token: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
            file: dist/*
            file_glob: true
            tag: {% raw %}${{ github.ref }}{% endraw %}
            overwrite: true
{% endif %}
{% if cookiecutter.dockerfile == "y" %}
  push-image:
    runs-on: ubuntu-latest
    needs: [set-version]
    steps:
      - uses: actions/checkout@v4
      - name: Export tag
        id: vars
        run: {% raw %}echo tag=${GITHUB_REF#refs/*/} >> $GITHUB_OUTPUT{% endraw %}
        if: {% raw %}${{ github.event_name == 'release' }}{% endraw %}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: {{ cookiecutter.author_github_handle }}
          password: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
      - name: Build and push image
        id: docker_build_publish
        uses: docker/build-push-action@v5
        with:
            context: .
            platforms: linux/amd64,linux/arm64/v8
            cache-from: type=gha
            cache-to: type=gha,mode=max
            file: ./Dockerfile
            push: true
            tags: |
              ghcr.io/{{ cookiecutter.author_github_handle }}/{{cookiecutter.project_name}}:{% raw %}${{ steps.vars.outputs.tag }}{% endraw %}
              ghcr.io/{{ cookiecutter.author_github_handle }}/{{cookiecutter.project_name}}:latest
{% endif %}
{%- if cookiecutter.mkdocs == "y" %}
  deploy-docs:
    {%- if cookiecutter.publish_to_pypi == "y" %}
    needs: publish
    {%- endif %}
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env

      - name: Deploy documentation
        run: uv run mkdocs gh-deploy --force
{% endif %}
